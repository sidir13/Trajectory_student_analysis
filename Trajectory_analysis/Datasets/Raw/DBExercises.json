{"funcs04.py_ca278_get_price": {"funcname": "funcs04.py_ca278_get_price", "exo_name": "funcs04.py_ca278_get_price", "solution": "def get_price(age):\n   if age <= 16:\n      return 5\n   elif age > 60:\n      return 7\n   else:\n      return 10\n\ndef merge_lists(l1,l2):\n   l3=[]\n   merge = 1\n   for num in l1:\n      if merge > 0:\n          l3.append(num)\n      merge = -merge\n   merge = 1\n   for num in l2:\n      if merge > 0:\n          l3.append(num)\n      merge = -merge\n   return l3\n\ndef weird_case(some_str):\n\n   words = some_str.split()\n   string = 1\n   some_str = []\n   for word in words:\n      word = list(word)\n      for letter in word:\n         if string > 0:\n            some_str.append(letter.upper())\n         else:\n            some_str.append(letter)\n         string =-string\n      some_str.append(\" \")\n      string = string\n   some_str=\"\".join(some_str[:-1])\n   return some_str\n\ndef remove_zeros(list):\n\n   i = 0\n   while 0 in list:\n      list.remove(0)"}, "reverse_102.py_ca117_reverse_list": {"solution": "def reverse_list(l):\n\treturn l[::-1]", "funcname": "reverse_102.py_ca117_reverse_list", "exo_name": "reverse_102.py_ca117_reverse_list"}, "iterative07.py_ca278_fibonacci": {"funcname": "iterative07.py_ca278_fibonacci", "exo_name": "iterative07.py_ca278_fibonacci", "solution": "import time\n\ndef countdown(num):\n  '''prints all the numbers from num to 1 with a gap of 100 milliseconds in between each print, followed by LIFT OFF!'''\n  while num >= 1:\n    print(num)\n    time.sleep(0.1)\n    num = num - 1\n  print('LIFT OFF!')\n\ndef search(str,letter):\n  '''returns True if letter is in str, False if it is not there'''\n  i = 0\n  while i < len(str):\n    if letter == str[i]:\n      return True\n    i = i + 1\n  return False\n\ndef index(str,letter):\n  '''returns the position of letter in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if letter == str[i]:\n      return i\n    i = i + 1\n  return -1\n\n\ndef fibonacci(n):\n  '''returns the value of the fibonacci series at position n'''\n  if n == 0:\n    return 0\n  if n == 1:\n    return 1\n  else:\n    fibN_2 = 0\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing index')\n  print(index('test','t'))\n  print(index('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n"}, "sequence-10.py_ca177": {"funcname": "sequence-10.py_ca177", "exo_name": "sequence-10.py_ca177", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(100 - i)\n   i += 1\n"}, "sequence-6.py_ca177": {"funcname": "sequence-6.py_ca177", "exo_name": "sequence-6.py_ca177", "solution": "#!/bin/usr/env python\n\ni = 0\n\nwhile i < 10:\n  print(i % 3)\n  i = i + 1"}, "geometry.py_ca277_rectangle_perimeter": {"funcname": "geometry.py_ca277_rectangle_perimeter", "exo_name": "geometry.py_ca277_rectangle_perimeter", "solution": "def square_area(n):\n\tsq = n*n\n\treturn sq\n\n\ndef square_perimeter(n):\n\tsp = n + n + n + n\n\treturn sp\n\ndef circle_area(n):\n\tca = 3.14 * n * n\n\treturn ca\n\ndef circle_circumference(n):\n\tcc = 2 * 3.14 * n\n\treturn cc\n\ndef rectangle_perimeter(n,m):\n\trp =  n + n + m + m\n\treturn rp\n"}, "sets.py_ca277_intersection": {"funcname": "sets.py_ca277_intersection", "exo_name": "sets.py_ca277_intersection", "solution": "def union(a, b):\n\tseen = {}\n\t\n\ti = 0\n\twhile i < len(a) :\t\n\t\tseen[a[i]] = True \n\t\ti = i + 1\n\n\tk = 0\n\twhile k < len(b):\t\n\t\tif not (b[k] in seen):\n\t\t\tseen[b[k]] = True\n\t\tk = k + 1\n\n\treturn seen\t\n\ndef intersection(a, b):\n\tseen = {}\n\n\ti = 0\n\twhile i < len(a):\n\t\tif a[i] in b and not (a[i] in seen):\n\t\t\tseen[a[i]] = True \n\t\ti = i + 1\n\n\treturn seen \t\t"}, "sequence-5.py_ca177": {"solution": "i = 0 \nwhile i < 10:\n  print(3 * i)\n  i = i + 1\n", "funcname": "sequence-5.py_ca177", "exo_name": "sequence-5.py_ca177"}, "funcs04.py_ca278_merge_lists": {"funcname": "funcs04.py_ca278_merge_lists", "exo_name": "funcs04.py_ca278_merge_lists", "solution": "\nimport sys \n\ndef get_price(age):\n\t \n\n\tif int(age) < 16:\n\t\treturn \"5\"\n\telif int(age) > 60:\n\t\treturn \"7\"\n\telse:\n\t\treturn \"10\"\n\n\ndef merge_lists(l1,l2):\n\ti = 0\n\twhile i < len(l2):\n\t\tl1.append(l2[i])\n\t\ti = i + 1\n\n\ti = 0\n\twhile i < len(l1):\n\t\tif i % 2 == 1 and i != 0:\n\t\t\tl1.remove(l1[i])\n\t\ti = i + 1\n\treturn l1\t\n\n\t\t\ndef weird_case(some_str):\n\ta = []\n\tline = some_str.strip(\"\\n\").split(\" \")\n\ti = 0\n\twhile i < len(line):\n\t\tword = line[i]\n\t\tx = 0\n\t\twhile x < len(word):\n\t\t\ta.append(word[x])\n\t\t\tx = x + 1\n\t\ta.append(\" \")\n\t\ti = i + 1\t\n\tdel a[len(a) - 1]\n\tx = -1\n\ti = 0\n\twhile i <len(a):\n\t\tif a[i] != \" \":\n\t\t\tx = x + 1\n\t\tif x == 0 or x % 2 == 0:\n\t\t    a[i] =str(a[i].upper())\n\t\ti = i + 1\n\treturn \"\".join(a)\t\n\n\ndef remove_zeros(a):\n\tb = []\n\ti = 0\n\twhile i < len(a):\n\t\tif int(a[i]) == 0:\n\t\t\ta.remove(a[i])\n\t\t\ti = i - 1\n\t\ti = i + 1\t\n\n"}, "geometry_1.py_ca277_square_area": {"solution": "def square_area(side):\n    sq = side * side\n    return sq\n\ndef square_perimeter(side):\n    perimeter = side * 4\n    return perimeter\n    \ndef circle_area(r):\n    cir = 3.14 * (r * r)\n    return cir\n\ndef circle_circumference(r):\n    circum = 2 * 3.14 * r\n    return circum\n    \n    ", "funcname": "geometry_1.py_ca277_square_area", "exo_name": "geometry_1.py_ca277_square_area"}, "funcs.py_ca278_print_keys": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n", "funcname": "funcs.py_ca278_print_keys", "exo_name": "funcs.py_ca278_print_keys"}, "func_reverse.py_ca116_reverse": {"funcname": "func_reverse.py_ca116_reverse", "exo_name": "func_reverse.py_ca116_reverse", "solution": "a=[4,3,1,2]\ndef swap(a,i,j):\n   tmp=a[i]\n   a[i]=a[j]\n   a[j]=tmp\n\ndef reverse(a):\n   i=0\n   j=len(a)-1\n   while i<len(a)/2:\n      swap(a,i,j)\n      i=i+1\n      j=j-1\n\n"}, "swap_more_42.py_ca117_swap_unique_keys_values": {"solution": "import sys\n\ndef swap_unique_keys_values(d):\n   new_d = {}\n   a = []\n   for value in list(d.values()):\n         a.append(value)\n   for key in d:\n      if a.count(d[key]) == 1:\n         new_d[d[key]] = key\n   return(new_d)\n", "funcname": "swap_more_42.py_ca117_swap_unique_keys_values", "exo_name": "swap_more_42.py_ca117_swap_unique_keys_values"}, "selectionsort_102.py_ca117_selectionsort": {"solution": "def selectionsort(a):\n   i = 0\n   while i < len(a):\n      p = i\n      j = i + 1\n      while j < len(a):\n         if a[j] < a[p]:\n            p = j\n         j = j + 1\n\n      a[i],a[p] = a[p],a[i]\n\n      i = i + 1", "funcname": "selectionsort_102.py_ca117_selectionsort", "exo_name": "selectionsort_102.py_ca117_selectionsort"}, "func_circle.py_ca116_circumference": {"solution": "pi = 3.141\n\ndef circumference(r):\n\treturn 2 * pi * r\n\ndef area(r):\n\treturn pi * r * r", "funcname": "func_circle.py_ca116_circumference", "exo_name": "func_circle.py_ca116_circumference"}, "reverse.py_ca277_reverse": {"funcname": "reverse.py_ca277_reverse", "exo_name": "reverse.py_ca277_reverse", "solution": "a=[]\n\ndef reverse(a):\n   a = a[:: - 1]\n   \n   return a"}, "area.py_ca116": {"solution": "area = side * side\n\n", "funcname": "area.py_ca116", "exo_name": "area.py_ca116"}, "func_selection_sort.py_ca116_selection_sort": {"solution": "#!/usr/bin/env python\ndef swap(a,p,i):\n\ttmp = a[p]\n\ta[p] = a[i]\n\ta[i] = tmp\n\treturn a\n\n\n\n\ndef selection_sort(a):\n\ti = 0\n\twhile i < len(a):\n\t\tp = i\n\t\tj = i + 1\n\t\twhile j < len(a):\n\t\t\tif a[j] < a[p]:\n\t\t\t\tp = j\n\t\t\tj += 1\n\n\t\tswap(a,p,i)\n\t\ti += 1\n\treturn a\n\n\ndef main():\n\tprint(selection_sort(a))\nif __name__ == '__main__':\n\tmain()", "funcname": "func_selection_sort.py_ca116_selection_sort", "exo_name": "func_selection_sort.py_ca116_selection_sort"}, "recursive07.py_ca278_index": {"funcname": "recursive07.py_ca278_index", "exo_name": "recursive07.py_ca278_index", "solution": "import time\n\ndef countdown(num):\n   '''prints all the numbers from num to 1 with a gap of 100 milliseconds in between each print, followed by LIFT OFF!'''\n   if num == 0:\n     print(\"LIFT OFF!\")\n   else:\n     print(num)\n     time.sleep(0.1)\n     countdown(num-1)\n \ndef search(str,letter):\n   '''returns True if letter is in str, False otherwise'''\n   if str == \"\":\n     return False\n   elif str[0] == letter:\n     return True\n   else:\n        #keep looking\n     return search(str[1:],letter)\n   \n \ndef index(str,letter,pos):\n   '''returns the position of letter in str, -1 if it is not there'''\n   if pos == len(str):\n     return -1\n   elif str[pos] == letter:\n     return pos\n   else:\n     return index(str,letter,pos+1)\n \n \ndef fibonacci(n):\n   '''returns the value of the fibonacci series at position n'''\n   if n == 0:\n      return 0\n   elif n == 1:\n      return 1\n   else:\n     return fibonacci(n-1) + fibonacci(n-2)\n \nif __name__ == '__main__':\n   print('testing countdown')\n   countdown(10)\n \n   print('testing search')\n   print(search('test','t'))\n   print(search('test','a'))\n \n   print('testing index')\n   print(index('test','t',0))\n   print(index('test','a',0))\n \n   print('testing fibonacci')\n   print(fibonacci(5))"}, "hello.py_ca116": {"funcname": "hello.py_ca116", "exo_name": "hello.py_ca116", "solution": "print(\"hello\")\n"}, "mutable_062.py_ca117_append2list": {"solution": "# Append l1 to l2. If l2 not supplied default to empty list.\ndef append2list(l1, l2=None):\n   if l2 is None:\n      l2 = []\n   for i in l1:\n      l2.append(i)\n   return l2\n\ndef main():    \n    list1 = ['cat', 'dog']\n    nlist = append2list(list1)\n    # nlist should be ['cat', 'dog']\n    print(nlist)\n\n    list2 = ['lion']\n    nlist = append2list(list2, ['antelope'])\n    # nlist should be ['antelope', 'lion']\n    print(nlist)\n\n    list3 = ['fox', 'chicken']\n    nlist = append2list(list3)\n    # nlist should be ['fox', 'chicken']\n    print(nlist)\n\nif __name__ == '__main__':\n    main()", "funcname": "mutable_062.py_ca117_append2list", "exo_name": "mutable_062.py_ca117_append2list"}, "selection_sort.py_ca277_sort": {"funcname": "selection_sort.py_ca277_sort", "exo_name": "selection_sort.py_ca277_sort", "solution": "def swap(a, i , j):\n   tmp = a[i]\n   a[i] = a[j]\n   a[j] = tmp\n\ndef find_position_of_smallest(a,i):\n   p = i\n   while i < len(a):\n      if a[i] < a[p]:\n         p = i\n      i = i + 1\n   return p\n\ndef sort(a):\n   i = 0\n   while i < len(a):\n      p = find_position_of_smallest(a, i)\n      swap(a, i, p)\n      i = i + 1\n"}, "sequence-4.py_ca277": {"funcname": "sequence-4.py_ca277", "exo_name": "sequence-4.py_ca277", "solution": "i = 0\nwhile i < 10:\n\tprint(i * 2)\n\ti += 1"}, "func_double.py_ca116_double": {"solution": "def double(n):\n   m = 2 * n\n   return m\n\ndef main():\n   print(double(7))\n   print(double(\"Hello\"))\n\nif __name__ == \"__main__\":\n   main()", "funcname": "func_double.py_ca116_double", "exo_name": "func_double.py_ca116_double"}, "geometry.py_ca277_square_perimeter": {"solution": "def square_area(n):\n   return n ** 2\n   \ndef square_perimeter(n):\n   return 4*n\n\ndef circle_area(n):\n   return n*n*3.14\n\ndef circle_circumference(n):\n   return 2*3.14*n\n\ndef rectangle_perimeter(n,m):\n   return 2*(n+m)", "funcname": "geometry.py_ca277_square_perimeter", "exo_name": "geometry.py_ca277_square_perimeter"}, "swap_v2_042.py_ca117_swap_unique_keys_values": {"funcname": "swap_v2_042.py_ca117_swap_unique_keys_values", "exo_name": "swap_v2_042.py_ca117_swap_unique_keys_values", "solution": "import sys #Gellert\ndef swap_unique_keys_values(dic):\n\ta, b, c = [],[], {}\n\tfor file in dic:\n\t\tif file in a:\t\t\t\n\t\t\ta.pop(a.index(dic[file]))\n\t\telse:\n\t\t\ta.append([file, dic[file]])\n\t\t#print (a)\n\tfor letter in a:\n\t\t#\tprint (letter)\n\t\t\tif letter[1] in c:\n\t\t\t\tdel c[letter[1]]\n\t\t\telse:\n\t\t\t\tc[letter[1]]= letter[0]\n\t#print (c)\n\treturn c\n\t\nif __name__ == \"__main__\":\n\tmain()\n"}, "sets.py_ca277_union": {"funcname": "sets.py_ca277_union", "exo_name": "sets.py_ca277_union", "solution": "def union(a, b):\n  seen = {}\n\n  i = 0\n  while i < len(a):\n    seen[a[i]] = True\n    i = i + 1\n\n  j = 0\n  while j  < len(b):\n    if not (b[j] in seen):\n      seen[b[j]] = True\n    j = j + 1\n\n  return seen\n\ndef intersection(a, b):\n  seen = {}\n\n  i = 0\n  while i < len(a):\n    if a[i] in b and not (a[i] in seen):\n      seen[a[i]] = True\n    i = i + 1\n\n  return seen \n      \n      \n"}, "sequence-13.py_ca177": {"funcname": "sequence-13.py_ca177", "exo_name": "sequence-13.py_ca177", "solution": "#!/usr/bin/env python\n\ntotal = 0\n\ni = 0\nwhile i < 10:\n   total = total + i\n   i = i + 1\n   print(total)\n"}, "geometry.py_ca277_circle_area": {"funcname": "geometry.py_ca277_circle_area", "exo_name": "geometry.py_ca277_circle_area", "solution": "def square_area(x):\n\treturn x ** 2\n\ndef square_perimeter(x):\n\treturn x * 4\n\ndef circle_area(r):\n\treturn r * r * 3.14\n\ndef circle_circumference(r):\n\treturn r * 2 * 3.14\n\ndef rectangle_perimeter(x, y):\n\treturn 2 * (x+y)\n\nif __name__ == \"__main__\":\n\tprint(square_area(x))\n\tprint(square_perimeter(x))\n\tprint(circle_area(r))\n\tprint(circle_circumference(r))\n\tprint(geometry.rectangle_perimeter(x,y))\n"}, "func_circle.py_ca116_area": {"solution": "pi = 3.141\n\ndef circumference(r):\n\treturn (r * pi * 2)\ndef area(r):\n\treturn pi * (r ** 2)", "funcname": "func_circle.py_ca116_area", "exo_name": "func_circle.py_ca116_area"}, "sequence-7.py_ca177": {"funcname": "sequence-7.py_ca177", "exo_name": "sequence-7.py_ca177", "solution": "#!/usr/bin/env python\n\ni = 0\nN = 20\nwhile i < N:\n   print(i % 6)\n   i = i + 2\n"}, "sequence-9.py_ca177": {"solution": "#!/usr/bin/env python\n\nN = 11\ni = 1\nwhile i < N:\n   print(i % 2)\n   i = i + 1\n", "funcname": "sequence-9.py_ca177", "exo_name": "sequence-9.py_ca177"}, "sequence-14.py_ca177": {"funcname": "sequence-14.py_ca177", "exo_name": "sequence-14.py_ca177", "solution": "#!/usr/bin/env python\na = 0\ni = 0\nb = -2\nwhile i < 10:\n  print(a)\n  b = b * -1\n  a += b\n  i += 1\n"}, "mutable_62.py_ca117_append2list": {"funcname": "mutable_62.py_ca117_append2list", "exo_name": "mutable_62.py_ca117_append2list", "solution": "# Append l1 to l2. If l2 not supplied default to empty list.\ndef append2list(l1, l2=[][::]):\n    #for i in l1:\n    #    l2.append(i)\n    return l2 + l1\n\ndef main():\n    list1 = ['cat', 'dog']\n    nlist = append2list(list1)\n    # nlist should be ['cat', 'dog']\n    print(nlist)\n\n    list2 = ['lion']\n    nlist = append2list(list2, ['antelope'])\n    # nlist should be ['antelope', 'lion']\n    print(nlist)\n\n    list3 = ['fox', 'chicken']\n    nlist = append2list(list3)\n    # nlist should be ['fox', 'chicken']\n    print(nlist)\n\nif __name__ == '__main__':\n    main()\n"}, "n-100.py_ca116": {"solution": "n = 100", "funcname": "n-100.py_ca116", "exo_name": "n-100.py_ca116"}, "geometry.py_ca277_square_area": {"funcname": "geometry.py_ca277_square_area", "exo_name": "geometry.py_ca277_square_area", "solution": "def square_area(side):\n    return side * side\n     \n \ndef square_perimeter(side):\n    return 4 * side\n     \n \ndef circle_area(r):\n    return  r * r * 3.14\n     \n \ndef circle_circumference(r):\n    return r * 2 * 3.14\n     \n \ndef rectangle_perimeter(l, w):\n    return 2 * (l + w)\n    \n \nif __name__ == \"__main__\":\n   print(square_perimeter(2))\n   print(circle_area(2))\n   print(circle_circumference(3))\n   print(rectangle_perimeter(2 , 4))\n"}, "iterative07.py_ca278_index": {"funcname": "iterative07.py_ca278_index", "exo_name": "iterative07.py_ca278_index", "solution": "#Countdown\ndef countdown(num=3):\n   while num!=0:\n      print(num)\n      num=num-1\n   print(\"LIFT OFF!\")\n#Search\ndef search(ls,val):\n   i= 0\n   while i< len(ls):\n      if ls[i] == val:\n         return True\n      i = i + 1\n   return False\n#Index\ndef index(ls,val):\n   i= 0\n   while i< len(ls):\n      if ls[i] == val:\n         return i\n      i = i + 1\n   return -1\n#Fibonacci\ndef fibonacci(n):\n   a=[0,1,1]\n   i=3\n   while i<n:\n      a.append(a[i-1]+a[i-2])\n      i=i+1 \n   a.append(a[i-1]+a[i-2])\n   return a[n]\n"}, "iterative07.py_ca278_search": {"funcname": "iterative07.py_ca278_search", "exo_name": "iterative07.py_ca278_search", "solution": "#usr!/bin/env python\nimport time\n\ndef countdown(number):\n    while number > 0:\n        print(number)\n        time.sleep(.1)\n        number -= 1\n        if number == 0:\n            print(\"LIFT OFF!\")\n\nif __name__ == '__main__':\n\tcountdown(1000)\n\ndef search(str,letter):\n\tif letter in str:\n\t\treturn True\n\telse:\n\t\treturn False\n\ndef index(str,letter):\n\tif letter not in str:\n\t\treturn -1\n\telse:\n\t\treturn str.find(letter)\n\ndef fibonacci(n):\n    if n < 2:\n        return n\n    return fibonacci(n-2) + fibonacci(n-1)"}, "fibonacci_102.py_ca117_fibonacci": {"solution": "def fibonacci(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n\n    return fibonacci(n-1) + fibonacci(n-2)", "funcname": "fibonacci_102.py_ca117_fibonacci", "exo_name": "fibonacci_102.py_ca117_fibonacci"}, "sequence-12.py_ca177": {"funcname": "sequence-12.py_ca177", "exo_name": "sequence-12.py_ca177", "solution": "#!/usr/bin/env python\n\ni = 0\nj = 0\nwhile j < 10:\n   print(i)\n   i = -i + 1\n   j = j + 1\n\n"}, "sequence-3.py_ca177": {"funcname": "sequence-3.py_ca177", "exo_name": "sequence-3.py_ca177", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i > -10:\n  print(i)\n  i = i - 1\n"}, "sequence-4.py_ca177": {"funcname": "sequence-4.py_ca177", "exo_name": "sequence-4.py_ca177", "solution": "#!/usr/bin/env python\ni = 0\nwhile i < 20:\n    print(i)\n    i = i + 2\n"}, "funcs04.py_ca278_remove_zeros": {"solution": "#funky funcs\n\ndef get_price(age):\n#  16s and under pay 5 euro\n   if age<=16:\n      return 5\n#  over 60s pay 7 euro\n   elif age>60:\n      return 7\n#  everyone else pays 10 euro\n   else:\n      return 10\n\ndef merge_lists(l1,l2):\n#  takes two lists, l1 and l2, and returns a third list which contains every second element of l1 and l2\n   l3=[]\n   flip=1\n   for num in l1:\n      if flip>0:\n          l3.append(num)\n      flip=-flip\n   flip=1\n   for num in l2:\n      if flip>0:\n          l3.append(num)\n      flip=-flip\n   return l3\n\ndef weird_case(some_str):\n#    takes a string, some_str, and returns a new string in which every second letter is uppercase\n   words= some_str.split()\n\n   flipper=1\n   SoMe_StR=[]\n   for word in words:\n      word=list(word)\n      for letter in word:\n         if flipper>0:\n            SoMe_StR.append(letter.upper())\n         else:\n            SoMe_StR.append(letter)\n         flipper=-flipper\n      SoMe_StR.append(\" \")\n      flipper=flipper\n   SoMe_StR=\"\".join(SoMe_StR[:-1])\n   return SoMe_StR\n\ndef remove_zeros(List):\n#    takes a list, list, and removes zeros. Note: nothing is returned from this function. \n   i=0\n   while 0 in List:\n      List.remove(0)\n#############################\n", "funcname": "funcs04.py_ca278_remove_zeros", "exo_name": "funcs04.py_ca278_remove_zeros"}, "circumference.py_ca116": {"solution": "circumference = 2 * pi * radius\n", "funcname": "circumference.py_ca116", "exo_name": "circumference.py_ca116"}, "hello.py_ca277": {"solution": "print(\"hello\")", "funcname": "hello.py_ca277", "exo_name": "hello.py_ca277"}, "sumup_102.py_ca117_sumup": {"solution": "#!/usr/bin/env python\n\ndef sumup(number):\n\n    if number == 0:\n        return 0\n\n    return sumup(number- 1) + number \n", "funcname": "sumup_102.py_ca117_sumup", "exo_name": "sumup_102.py_ca117_sumup"}, "circle_62.py_ca117_overlap": {"solution": "def overlap(x1=0, y1=0, r1=1, x2=0, y2=0, r2=1):\n    distance = (((((x2 - x1) ** 2) + ((y2 - y1) ** 2))** 0.5) < r1 + r2)\n    return distance\n\n\n", "funcname": "circle_62.py_ca117_overlap", "exo_name": "circle_62.py_ca117_overlap"}, "recursive07.py_ca278_countdown": {"solution": "import time\nimport sys\n\ndef countdown(num):\n   while int(num) > 0:\n      print(num)\n      num = num - 1\n      time.sleep(0.1)\n      \n   print(\"LIFT OFF!\")\n\n\ndef search(str,letter):\n   if letter in str:\n      return \"True\"\n   else:\n      return \"False\"\n\n\ndef index(str,letter1,letter2):\n   i = 0\n   while i < len(str):\n      if str[i] == letter1:\n         return i\n      i += 1\n   return \"-1\"\n\n   i = 0\n   while i < len(str):\n      if str[i] == letter1:\n         return i\n      i += 1\n   return \"-1\"\n\n\ndef fibonacci(n):\n   if n == 1:\n      return 1\n   elif n == 0:   \n      return 0            \n   else:                      \n      return fibonacci(n-1) + fibonacci(n-2)\n", "funcname": "recursive07.py_ca278_countdown", "exo_name": "recursive07.py_ca278_countdown"}, "all-integers.py_ca116": {"funcname": "all-integers.py_ca116", "exo_name": "all-integers.py_ca116", "solution": "\n\ni=0\n\nwhile i>-1:\n   print(i)\n   i=i+1\n"}, "geometry.py_ca277_circle_circumference": {"solution": "def square_area(side):\n    sq = side * side\n    return sq\n\ndef square_perimeter(side):\n    perimeter = side * 4\n    return perimeter\n    \ndef circle_area(r):\n    cir = 3.14 * (r * r)\n    return cir\n\ndef circle_circumference(r):\n    circum = 2 * 3.14 * r\n    return circum\n    \ndef rectangle_perimeter(a,b):\n    per = (a * 2) + (b * 2)\n    return per", "funcname": "geometry.py_ca277_circle_circumference", "exo_name": "geometry.py_ca277_circle_circumference"}, "03-fizzbuzz.py_ca278": {"solution": "i = 1\nwhile i <= 100:\n  if i % 15 == 0:\n    print(\"fizzbuzz\")\n  elif i % 5 == 0:\n    print(\"buzz\")\n  elif i % 3 == 0:\n    print(\"fizz\")\n  else:\n    print(i)\n  i = i + 1\n", "funcname": "03-fizzbuzz.py_ca278", "exo_name": "03-fizzbuzz.py_ca278"}, "hello.py_ca114": {"solution": "\nprint(\"hello\")\n", "funcname": "hello.py_ca114", "exo_name": "hello.py_ca114"}, "funcs.py_ca278_search": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n", "funcname": "funcs.py_ca278_search", "exo_name": "funcs.py_ca278_search"}, "power_102.py_ca117_power": {"solution": "def power(m, n):\n  if n == 0:\n    return 1\n  return m * power(m, n - 1)\n\ndef main():\n  power()\n\nif __name__ == \"__main__\":\n  main()\n", "funcname": "power_102.py_ca117_power", "exo_name": "power_102.py_ca117_power"}, "recursive07.py_ca278_fibonacci": {"funcname": "recursive07.py_ca278_fibonacci", "exo_name": "recursive07.py_ca278_fibonacci", "solution": "import time, sys\n\ndef countdown(num):\n    if num == 0:\n        print(\"LIFT OFF!\")\n    else:\n        print(num)\n        num = num - 1\n        time.sleep(0.1)\n        return countdown(num)\n        \n   \ndef search(string, letter):\n    if string == \"\":\n        return False\n        \n    elif string[0] == letter:\n        return True\n    \n    else:\n        return search(string[1:],letter)\n       \ndef index(string, letter, pos=0):\n    if string == \"\":\n        return \"-1\"\n        \n    elif string[0] == letter:\n        return pos\n    \n    else:\n        pos += 1\n        return index(string[1:],letter, pos = pos)\n            \ndef fibonacci(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return fibonacci(n-2) + fibonacci(n-1)    \n\nif __name__ == '__main__':\n    print(fibonacci(5))"}, "swap_42.py_ca117_swap_keys_values": {"solution": "def swap_keys_values(d):\n   return({v : k for (k, v) in list(d.items())})\n\ndef main():\n   print((swap_keys_values(d)))\n\n\nif __name__ == '__main__':\n   main()", "funcname": "swap_42.py_ca117_swap_keys_values", "exo_name": "swap_42.py_ca117_swap_keys_values"}, "sequence-7.py_ca277": {"solution": "i = 0\nwhile i < 20:\n   print(i % 6) \n   i = i + 2", "funcname": "sequence-7.py_ca277", "exo_name": "sequence-7.py_ca277"}, "01fizzbuzz.py_ca278": {"funcname": "01fizzbuzz.py_ca278", "exo_name": "01fizzbuzz.py_ca278", "solution": "n = 1\nwhile n < 101:\n\tif n % 5 == 0 and n % 3 == 0:\n\t\tprint(\"fizzbuzz\")\n\telif n % 3 == 0:\n\t\tprint(\"fizz\")\n\telif n % 5 == 0:\n\t\tprint(\"buzz\")\n\telse:\n\t\tprint(n) \n\tn = n + 1 \n   \t\n\n\n"}, "minimum_102.py_ca117_minimum": {"solution": "\ndef minimum(l):\n    if len(l) == 1:\n        return l[0]\n    if l[0] < l[1]:\n        l.remove(l[1])\n    elif l[1] < l[0]:\n        l.remove(l[0])\n    return minimum(l)", "funcname": "minimum_102.py_ca117_minimum", "exo_name": "minimum_102.py_ca117_minimum"}, "recursive08.py_ca278_index": {"funcname": "recursive08.py_ca278_index", "exo_name": "recursive08.py_ca278_index", "solution": "import time\ndef countdown(num):\n\tif num == 1:\n\t\tprint(num)\n\t\tprint(\"LIFT OFF!\")\n\telse:\n\t\tprint(num)\n\t\ttime.sleep(0.1)\n\t\tcountdown(int(num)-1)\n\ndef search(str, letter):\n\tfor n in str:\n\t\tif n == letter:\n\t\t\treturn True\n\treturn False\n\ndef index(str,letter,pos):\n\tif pos == len(str):\n\t\treturn -1\n\t\ti += 1\n\telif str[pos] == letter:\n\t\treturn pos\n\telse:\n\t\treturn index(str,letter,pos+1)\n\ndef fibonacci(n):\n\ta = [0,1,1,2,3,5,8,13,21,34]\n\treturn a[n]"}, "sequence-2.py_ca277": {"solution": "#!/bin/env/python\n\ni = 1\nwhile i < 11:\n   print(i)\n   i = i + 1\n\n", "funcname": "sequence-2.py_ca277", "exo_name": "sequence-2.py_ca277"}, "sequence-11.py_ca177": {"funcname": "sequence-11.py_ca177", "exo_name": "sequence-11.py_ca177", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(i * 100 + i)\n   i = i + 1"}, "sequence-8.py_ca277": {"solution": "i=0\nwhile i < 10:\n   print(i % 2)\n   i=i+1\n", "funcname": "sequence-8.py_ca277", "exo_name": "sequence-8.py_ca277"}, "sequence-8.py_ca177": {"solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(i % 2)\n   i = i + 1", "funcname": "sequence-8.py_ca177", "exo_name": "sequence-8.py_ca177"}, "sequence-13.py_ca277": {"funcname": "sequence-13.py_ca277", "exo_name": "sequence-13.py_ca277", "solution": "i = 0\nj = 0\nk = 0\n\nwhile i < 10:\n   print(i + k)\n   k = i + k\n   i = i + 1"}, "pi-3.py_ca116": {"solution": "pi = 3\n", "funcname": "pi-3.py_ca116", "exo_name": "pi-3.py_ca116"}, "circle_062.py_ca117_overlap": {"solution": "import sys\n\n\ndef overlap(x1 = 0, y1 = 0, r1 = 1, x2 = 0, y2 = 0, r2 = 1):\n\treturn ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5 < r1 + r2\n\n\ndef main():\n    print((overlap()))\n    print((overlap(10)))\n    print((overlap(10,10)))\n    print((overlap(10,10,10)))\n    print((overlap(10,0,10)))\n    print((overlap(10,0,1,8,0,1)))\n    print((overlap(10,0,1,8,0,2)))\n\nif __name__ == '__main__':\n    main()\n", "funcname": "circle_062.py_ca117_overlap", "exo_name": "circle_062.py_ca117_overlap"}, "iterative08.py_ca278_fibonacci": {"funcname": "iterative08.py_ca278_fibonacci", "exo_name": "iterative08.py_ca278_fibonacci", "solution": "import time\n\ndef countdown(num):\n  '''prints all the numbers from num to 1 with a gap of 100 milliseconds in between each print, followed by LIFT OFF!'''\n  while num >= 1:\n    print(num)\n    time.sleep(0.1)\n    num = num - 1\n  print('LIFT OFF!')\n\ndef search(str,letter):\n  '''returns True if letter is in str, False if it is not there'''\n  i = 0\n  while i < len(str):\n    if letter == str[i]:\n      return True\n    i = i + 1\n  return False\n\ndef index(str,letter):\n  '''returns the position of letter in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if letter == str[i]:\n      return i\n    i = i + 1\n  return -1\n\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0 or n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing index')\n  print(index('test','t'))\n  print(index('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n"}, "iterative08.py_ca278_countdown": {"funcname": "iterative08.py_ca278_countdown", "exo_name": "iterative08.py_ca278_countdown", "solution": "import time\ndef countdown(num):\n\tif int(num) == 1:\n\t\tprint(num)\n\t\tprint(\"LIFT OFF!\")\n\telse:\n\t\tprint(num)\n\t\ttime.sleep(0.1)\n\t\tcountdown(int(num)-1)\n\ndef search(str,letter):\n\tfor item in str:\n\t\tif item == letter:\n\t\t\treturn True\n\treturn False\n\ndef index(str,letter):\n\ti = 0 \n\twhile i < len(str):\n\t\tif str[i] == letter:\n\t\t\treturn i \n\t\ti = i + 1\n\treturn \"-1\"\n\ndef fibonacci(n):\n\ta = [0,1,1,2,3,5,8,13,21,34]\n\treturn a[n]"}, "maximum_102.py_ca117_maximum": {"funcname": "maximum_102.py_ca117_maximum", "exo_name": "maximum_102.py_ca117_maximum", "solution": "def maximum(li):\n\tif len(li) == 1:\n\t\treturn li[0]\n\tbig = li.pop(0)\n\tv = maximum(li)\n\tif big < v:\n\t\tbig = v\n\treturn big"}, "sequence-1.py_ca177": {"solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(i)\n   i = i + 1\n", "funcname": "sequence-1.py_ca177", "exo_name": "sequence-1.py_ca177"}, "swap_v1_042.py_ca117_swap_keys_values": {"funcname": "swap_v1_042.py_ca117_swap_keys_values", "exo_name": "swap_v1_042.py_ca117_swap_keys_values", "solution": "import sys\n\ndef swap_keys_values(d):\n   a = []\n   d_2 = {}\n   for entry in list(d.items()):\n      swap = entry[::-1]\n      a.append(swap)\n   for k, v in a:\n      d_2[k] = v\n   return d_2\n"}, "recursive07.py_ca278_search": {"solution": "def countdown(num):\n   import time\n   if num == 0:\n      print('LIFT OFF!')\n   else:\n      print(num)\n      time.sleep(0.1)\n      countdown(num-1)\n\t  \ndef search(ls,val):\n   if ls == '':\n      return 'False'\n   elif ls [0] == val:\n      return 'True'\n   else:\n      return search(ls[1:],val)\n\t  \ndef index(string,letter,rv):\n   if string == '':\n        return -1\n   elif string[0] == letter:\n      return rv\n   else:\n      rv = rv + 1\n      return index(string[1:],letter,rv)\n\t   \ndef fibonacci(n):\n   if n <= 1:\n      return n\n   else:\n      return fibonacci(n-1)+fibonacci(n-2)\n", "funcname": "recursive07.py_ca278_search", "exo_name": "recursive07.py_ca278_search"}, "hello.py_ca177": {"solution": "#!/usr/bin/env python\n\nprint(\"hello\")\n", "funcname": "hello.py_ca177", "exo_name": "hello.py_ca177"}, "sequence-9.py_ca277": {"funcname": "sequence-9.py_ca277", "exo_name": "sequence-9.py_ca277", "solution": "i = 0\nwhile i < 10:\n   print((i + 1) % 2)\n   i = i + 1"}, "count_102.py_ca117_count_letters": {"solution": "def count_letters(s):\n\tif not s:\n\t\treturn 0\n\treturn 1 + count_letters(s[1:])", "funcname": "count_102.py_ca117_count_letters", "exo_name": "count_102.py_ca117_count_letters"}, "quicksort_102.py_ca117_quicksort": {"solution": "def partition(A, p, r):\n\n    # q and j start at p\n    q = j = p\n\n    # up to but not including pivot\n    while j < r:\n\n        # move values less than or equal to pivot and update q\n        if A[j] <= A[r]:\n            A[q], A[j] = A[j], A[q]\n            q += 1\n\n        j += 1\n\n    # swap pivot with A[q]\n    A[q], A[r] = A[r], A[q]\n\n    # return pivot index\n    return q\n\n# recursively partition list until sorted\ndef quicksort(A, p, r):\n\n    # return if nothing to sort (zero or one element)\n    if r <= p:\n        return\n\n    # partition and sort left and right sublists\n    q = partition(A, p, r)\n    quicksort(A, p, q-1)\n    quicksort(A, q+1, r)\n\n# repeatedly move minimimum of remaining sublist to front\ndef selectionsort(A):\n\n    i = 0\n    while i < len(A):\n        min_index = i\n        j = i+1\n        while j < len(A):\n            if A[j] < A[min_index]:\n                min_index = j\n            j += 1\n        A[i], A[min_index] = A[min_index], A[i]\n        i += 1\n\n# repeatedly insert into sorted array\ndef insertionsort(A):\n    pass\n", "funcname": "quicksort_102.py_ca117_quicksort", "exo_name": "quicksort_102.py_ca117_quicksort"}, "iterative07.py_ca278_countdown": {"solution": "import time\n\ndef countdown(num):\n\ti = 0\n\twhile num != 0:\n\t\ttime.sleep(0.1)\n\t\tprint(num)\n\t\tnum = num - 1\n\t\ti = i + 1\n\tprint(\"LIFT OFF!\")\n\ndef search(str,letter):\n\tif letter in str:\n\t\treturn True\n\telse:\n\t\treturn False\n\ndef index(str,letter):\n\ti = 0\n\twhile i < len(str):\n\t\tif str[i] == letter:\n\t\t\treturn i\n\t\telse: \n\t\t\ti = i + 1\n\tif i == len(str) :\n\t\treturn '-1'\n\ndef fibonacci(n):\n\tlist = [0]\n\ti = 0\n\twhile n >= len(list):\n\t\tif len(list) > 1:\n\t\t\tnew_num = list[i] + list[i-1] \n\t\telse:\n\t\t\tnew_num = list[i] + 1\n\t\tlist.append(new_num)\n\t\ti = i + 1\n\treturn list[-1]", "funcname": "iterative07.py_ca278_countdown", "exo_name": "iterative07.py_ca278_countdown"}, "sequence-2.py_ca177": {"solution": "i = 1\nwhile i < 11:\n   print(i)\n   i = i + 1\n", "funcname": "sequence-2.py_ca177", "exo_name": "sequence-2.py_ca177"}, "hello.py_ca000": {"solution": "print(\"hello\")\n", "funcname": "hello.py_ca000", "exo_name": "hello.py_ca000"}, "funcs04.py_ca278_weird_case": {"funcname": "funcs04.py_ca278_weird_case", "exo_name": "funcs04.py_ca278_weird_case", "solution": "def get_price(age):\n    if age <= 16:\n            return \"5\"\n    \n    elif age > 60:\n            return \"7\"\n    \n    else:\n            return\"10\"\n    \ndef merge_lists(l1, l2):\n    l = l1[::2] + l2[::2]\n    return l\n\ndef weird_case(some_str):\n    diff_str = \"\"\n    i = True\n    \n    for letter in some_str:\n        if i:\n               diff_str += letter.upper()\n    \n        else: \n               diff_str += letter.lower()\n    \n        if letter != \" \":\n                i = not i\n    \n    return diff_str\n\ndef remove_zeros(list):\n    i = 0\n    while i < len(list):\n            if 0 in list:\n                   list.remove(0)\n            i = i + 1\n             \n    "}, "iterative08.py_ca278_search": {"funcname": "iterative08.py_ca278_search", "exo_name": "iterative08.py_ca278_search", "solution": "import time\ndef countdown(num):\n\tif num == 1:\n\t\tprint(num)\n\t\tprint(\"LIFT OFF!\")\n\telse:\n\t\tprint(num)\n\t\ttime.sleep(0.1)\n\t\tcountdown(num-1)\n\n#search function\ndef search(str, letter):\n\tfor item in str:\n\t\tif item == letter:\n\t\t\treturn True\n\treturn False\n\n#index function\ndef index(str, letter):\n\ti = 0 \n\twhile i < len(str):\n\t\tif str[i] == letter:\n\t\t\treturn i \n\t\ti = i + 1\n\treturn -1\n\n#fibonacci function\ndef fibonacci(n):\n   i = 1\n   z = 0\n   x= 0\n   if n > 0:\n      while i < n:\n         x = i\n         i = i+z\n         z = x\n      return i\n   else:\n      return 0\n"}, "func_bsearch.py_ca116_bsearch": {"solution": "def bsearch (a,q):\n   low = 0\n   high = len(a)\n   \n   while low < high:\n     mid = (low + high) / 2\n\n     if a[mid] < q:\n       low = mid + 1\n\n     else:\n       high = mid\n\n   return low\n", "funcname": "func_bsearch.py_ca116_bsearch", "exo_name": "func_bsearch.py_ca116_bsearch"}, "goodbye.py_ca277": {"solution": "#!/usr/bin/env python\n\nprint(\"Goodbye\")\n", "funcname": "goodbye.py_ca277", "exo_name": "goodbye.py_ca277"}, "recursive08.py_ca278_countdown": {"funcname": "recursive08.py_ca278_countdown", "exo_name": "recursive08.py_ca278_countdown", "solution": "import time\n\ndef countdown(num):\n  if num == 0:\n    print(\"LIFT OFF!\")\n  else:\n    print(num)\n    time.sleep(.1)\n    countdown(num-1)\n    \ndef search(str,letter):\n  if str == \"\":\n    return False\n  elif str[0] == letter:\n    return True\n  else:\n    return search(str[1:],letter)\n\ndef index(str,letter,pos):\n  if pos == len(str):\n    return -1\n  elif str[pos] == letter:\n    return pos\n  else:\n    return index(str,letter,pos+1)\n\n\ndef fibonacci(n):\n  if n == 0:\n    return 0\n  elif n == 1:\n    return 1\n  else:\n    return fibonacci(n-1) +fibonacci(n-2)\n\nif __name__ == \"__main__\":\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing index')\n  print(index('test','t',0))\n  print(index('test','a',0))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n\n\n\n\n  \n"}, "iterative08.py_ca278_index": {"funcname": "iterative08.py_ca278_index", "exo_name": "iterative08.py_ca278_index", "solution": "import time\n \ndef countdown(count):\n     while (count >= 1):\n         print(count) \n         time.sleep(0.1)\n         count -= 1\n     print (\"LIFT OFF!\")\n \nif __name__ == '__main__':\n    countdown(3)\n \n \ndef search(str,letter):\n    i = 0\n    while i < len(str):\n       if str[i] == letter:\n         return True\n       i += 1\n    return False\n\nif __name__ == '__main__':\n    search(n)\n \ndef index(str,letter):\n    i = 0\n    while i < len(str):\n       if str[i] == letter:\n         return i\n       i += 1\n    return - 1\n\nif __name__ == '__main__':\n    index() \n \ndef fibonacci(n):\n   fib = [0,1,1]\n   for f in range(2,n):\n       fib.append(fib[-1]+fib[-2])\n   return fib[n]\n"}, "recursive08.py_ca278_fibonacci": {"funcname": "recursive08.py_ca278_fibonacci", "exo_name": "recursive08.py_ca278_fibonacci", "solution": "#countdown function\nimport time\ndef countdown(num):\n\tif num == 1:\n\t\tprint(num)\n\t\tprint(\"LIFT OFF!\")\n\telse:\n\t\tprint(num)\n\t\ttime.sleep(0.1)\n\t\tcountdown(num-1)\n\n#search function\ndef search(str, letter):\n\tfor item in str:\n\t\tif item == letter:\n\t\t\treturn True\n\treturn False\n\n#index function\ndef index(str, letter,pos):\n\tif pos == len(str):\n\t\treturn -1\n\telif str[pos] == letter:\n\t\treturn pos\n\telse:\n\t\treturn index(str, letter, pos+1)\n\n#fibonacci function\ndef fibonacci(n):\n\ta = [0,1,1,2,3,5,8,13,21,34]\n\treturn a[n]"}, "recursive08.py_ca278_search": {"solution": "import time\ndef countdown(num):\n\tif int(num) == 1:\n\t\tprint(num)\n\t\tprint(\"LIFT OFF!\")\n\telse:\n\t\tprint(num)\n\t\ttime.sleep(0.1)\n\t\tcountdown(int(num)-1)\n \n \ndef search(str,letter):\n\tfor item in str:\n\t\tif item == letter:\n\t\t\treturn True\n\treturn False\n \n\ndef index(str,letter,pos):\n\tif pos == len(str):\n\t\treturn -1\n\telif str[pos] == letter:\n\t\treturn pos\n\telse:\n\t\treturn index(str,letter,pos+1)\n \n \ndef fibonacci(n):\n\ta = [0,1,1,2,3,5,8,13,21,34]\n\treturn a[n]\n", "funcname": "recursive08.py_ca278_search", "exo_name": "recursive08.py_ca278_search"}, "everest-age.py_ca000": {"funcname": "everest-age.py_ca000", "exo_name": "everest-age.py_ca000", "solution": "age = 23\nmay_climb_everest = True\n\nprint(\"A person of age\", age, \"may climb Everest:\", may_climb_everest)\n"}, "factorial_102.py_ca117_factorial": {"funcname": "factorial_102.py_ca117_factorial", "exo_name": "factorial_102.py_ca117_factorial", "solution": "def factorial(n):\n   if n <= 1:\n      return 1\n   else:\n      return n * factorial(n - 1)"}, "funcs08.py_ca278_countdown": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n", "funcname": "funcs08.py_ca278_countdown", "exo_name": "funcs08.py_ca278_countdown"}, "sequence-1.py_ca277": {"solution": "i = 0\nwhile i < 10:\n   print(i)\n   i = i + 1\n", "funcname": "sequence-1.py_ca277", "exo_name": "sequence-1.py_ca277"}, "sequence-6.py_ca277": {"solution": "i = 0\nwhile i < 10:\n   print(i % 3)\n   i = i + 1\n", "funcname": "sequence-6.py_ca277", "exo_name": "sequence-6.py_ca277"}, "sequence-3.py_ca277": {"funcname": "sequence-3.py_ca277", "exo_name": "sequence-3.py_ca277", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i <10:\n    print(-i)\n    i = i + 1\n"}, "funcs.py_ca278_merge_lists": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n", "funcname": "funcs.py_ca278_merge_lists", "exo_name": "funcs.py_ca278_merge_lists"}, "sequence-5.py_ca277": {"solution": "i = 0\nwhile i < 10:\n   print(i*3)\n   i = i + 1", "funcname": "sequence-5.py_ca277", "exo_name": "sequence-5.py_ca277"}, "funcs08.py_ca278_remove_zeros": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n", "funcname": "funcs08.py_ca278_remove_zeros", "exo_name": "funcs08.py_ca278_remove_zeros"}, "sequence-11.py_ca277": {"funcname": "sequence-11.py_ca277", "exo_name": "sequence-11.py_ca277", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(i * 100 + i)\n   i = i + 1 "}, "sequence-12.py_ca277": {"funcname": "sequence-12.py_ca277", "exo_name": "sequence-12.py_ca277", "solution": "i = 0\nj = 0\nwhile i < 10:\n   print(j)\n   j = 1 - j\n   i = i + 1"}, "example-1.py_ca000": {"solution": "x = 3\ny = 4\n\nprint(\"The product of\", x, \"and\", y, \"is\", x * y)\n", "funcname": "example-1.py_ca000", "exo_name": "example-1.py_ca000"}, "sequence-14.py_ca277": {"solution": "i = 0 \nn = 0\nwhile i < 20:\n   print(n)\n   i = i + 2\n   n = 2 - n\n", "funcname": "sequence-14.py_ca277", "exo_name": "sequence-14.py_ca277"}, "funcs08.py_ca278_fibonacci": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n", "funcname": "funcs08.py_ca278_fibonacci", "exo_name": "funcs08.py_ca278_fibonacci"}, "sequence-10.py_ca277": {"funcname": "sequence-10.py_ca277", "exo_name": "sequence-10.py_ca277", "solution": "#!/usr/bin/env python\n\ni = 0\nwhile i < 10:\n   print(101 - i - 1)\n   i = i + 1 "}, "funcs.py_ca278_remove_zeros": {"funcname": "funcs.py_ca278_remove_zeros", "exo_name": "funcs.py_ca278_remove_zeros", "solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n"}, "hello.py_ca320": {"solution": "print(\"hello\")\n", "funcname": "hello.py_ca320", "exo_name": "hello.py_ca320"}, "funcs08.py_ca278_merge_lists": {"funcname": "funcs08.py_ca278_merge_lists", "exo_name": "funcs08.py_ca278_merge_lists", "solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n"}, "funcs.py_ca278_weird_case": {"funcname": "funcs.py_ca278_weird_case", "exo_name": "funcs.py_ca278_weird_case", "solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n"}, "funcs.py_ca278_get_price": {"funcname": "funcs.py_ca278_get_price", "exo_name": "funcs.py_ca278_get_price", "solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which contains \nevery second letter in some_str'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''take a list of numbers and remove zeros from the list'''\n    while 0 in list:\n        list.remove(0)\n\ndef search(list,num):\n    '''find the position of num in list, return -1 if it is not there'''\n    i = 0\n    while i < len(list):\n        if list[i] == num:\n            return i\n        i = i + 1\n    return -1\n\ndef print_keys(dict):\n    '''print all the keys in a dictionary, one per line'''\n    for key in dict:\n        print(key)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\n    \n"}, "funcs08.py_ca278_get_price": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n", "funcname": "funcs08.py_ca278_get_price", "exo_name": "funcs08.py_ca278_get_price"}, "funcs08.py_ca278_weird_case": {"solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n", "funcname": "funcs08.py_ca278_weird_case", "exo_name": "funcs08.py_ca278_weird_case"}, "funcs08.py_ca278_search": {"funcname": "funcs08.py_ca278_search", "exo_name": "funcs08.py_ca278_search", "solution": "def merge_lists(l1,l2):\n  '''take two lists l1 and l2 and return a third list which contains \n  every second element of l1 and l2'''\n  l3 = []\n  i = 0\n  while i < len(l1):\n      l3.append(l1[i])\n      i += 2\n  i = 0\n  while i < len(l2):\n      l3.append(l2[i])\n      i += 2\n  return l3\n\ndef weird_case(some_str):\n    '''takes a string some_str and contains a new string which is the same as some_str but the case alternates between upper and lower'''\n    new_str = \"\"\n    i = 0\n    lc = 0 # separate count for the letters\n    while i < len(some_str):\n        if some_str[i].isalpha():\n            if lc % 2 == 0:\n                new_str += some_str[i].upper()\n            else:\n                new_str += some_str[i].lower()\n            lc += 1\n        else:\n          new_str += some_str[i]\n        i = i + 1\n    return new_str\n\ndef remove_zeros(list):\n    '''remove zeros from list'''\n    while 0 in list:\n        list.remove(0)\n\ndef get_price(age):\n    '''checks age and returns price associated with the age'''\n    if age <= 16:\n        return 5\n    elif age <=60:\n        return 10\n    else:\n        return 7\n\ndef search(str,sub):\n  '''returns the position of sub in str, -1 if it is not there'''\n  i = 0\n  while i < len(str):\n    if sub == str[i]:\n      return i\n    i = i + 1\n  return -1\n\ndef countdown(num):\n  '''prints all the numbers from num to 0'''\n  while num >= 0:\n    print(num)\n    num = num - 1\n\ndef fibonacci(n):\n  '''returns the value of the fibonnaci series at position n'''\n  if n == 0:\n    return 1\n  elif n == 1:\n    return 1\n  else:\n    fibN_2 = 1\n    fibN_1 = 1\n    i = 2\n    while i <=n:\n      fibN = fibN_2 + fibN_1\n      fibN_2 = fibN_1\n      fibN_1 = fibN\n      i = i + 1\n    return fibN\n\nif __name__ == '__main__':\n  print('testing get_price')\n  print(get_price(7))\n\n  print('testing merge_lists')\n  print(merge_lists(['a','x'],['b','y']))\n\n  print('testing weird_case')\n  print(weird_case('test'))\n\n  print('testing remove_zeros')\n  l = [0,0,9]\n  print(l)\n  remove_zeros(l)\n  print(l)\n\n  print('testing countdown')\n  countdown(10)\n\n  print('testing search')\n  print(search('test','t'))\n  print(search('test','a'))\n\n  print('testing fibonacci')\n  print(fibonacci(5))\n\n   \n    \n\n\n"}, "hello-3.py_ca247": {"solution": "\nprint(\"hello\")\n", "funcname": "hello-3.py_ca247", "exo_name": "hello-3.py_ca247"}, "hello.py_ca278": {"funcname": "hello.py_ca278", "exo_name": "hello.py_ca278", "solution": "print(\"hello\")\n"}, "ex2-primes-1.py_ca116": {"solution": "\nn = 10\n\ni = 2\nwhile i < n:\n   print(i)\n   i = i + 1\n", "funcname": "ex2-primes-1.py_ca116", "exo_name": "ex2-primes-1.py_ca116"}, "days-of-the-week.py_ca000": {"solution": "# day is a day of the week in the range (1..7).\n# 1 is Monday, 7 is Sunday.\n\nday = 2 # Tuesday\n\nis_school_day = day < 5\nis_weekend = day> 5\n\nprint(\"day is a school day:\", is_school_day)\nprint(\"day is a weekend day:\", is_weekend)\n", "funcname": "days-of-the-week.py_ca000", "exo_name": "days-of-the-week.py_ca000"}, "german-words.py_ca116": {"solution": "\nwords = {\n   \"one\":    \"eins\",\n   \"two\":    \"zwei\",\n   \"three\":  \"drei\",\n   \"four\":   \"vier\",\n   \"five\":   \"funf\",\n   \"six\":    \"sechs\",\n   \"seven\":  \"sieben\",\n   \"eight\":  \"acht\",\n   \"nine\":   \"neun\",\n   \"tent\":   \"zehn\",\n}\n\nprint(words)\n", "funcname": "german-words.py_ca116", "exo_name": "german-words.py_ca116"}, "tv_get_minutes.py_ca116": {"solution": "\ndef get_minutes(s):\n   hm = s.split(\":\")\n   return int(hm[0]) * 60 + int(hm[1])\n\ndef main():\n   for s in [\"0:7\", \"10:30\", \"24:00\"]:\n      print(\"testing:\", s)\n      print(get_minutes(s))\n\nif __name__ == \"__main__\":\n   main()\n\n", "funcname": "tv_get_minutes.py_ca116", "exo_name": "tv_get_minutes.py_ca116"}}